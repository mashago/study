#1.define project and target
#2.define make flags
#3.define include and lib dir
#4.check os to set include or lib dir
#5.group header and sourse
#6.add sub dir if necessary
#7.add executable or library
#8.target link libraries if necessary
#9.set output path

#define cmake version
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

#1.define project and target
SET(PROJECT_NAME mysql_study)
SET(TARGET_MYSQL_OPERATOR mysql_operator)
SET(TARGET_MYSQL_TEST mysql_test)
SET(TARGET_MYSQL_TEST2 mysql_test2)
SET(TARGET_TEST_LOCK test_lock)
PROJECT(${PROJECT_NAME})
SET(PROJECT_PATH ${CMAKE_CURRENT_SOURCE_DIR})

#2.define make flags
SET(PROJECT_BUILD_TYPE "Debug")
SET(CMAKE_BUILD_TYPE ${PROJECT_BUILD_TYPE})
SET(CMAKE_CONFIGURATION_TYPES ${PROJECT_BUILD_TYPE})
IF(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
	SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -Wall")
ENDIF()
SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")

#3.define include and lib
INCLUDE_DIRECTORIES(
./
/usr/local/include
)

LINK_DIRECTORIES(
/usr/local/lib
)

IF(CMAKE_SYSTEM_NAME MATCHES "Darwin")
	INCLUDE_DIRECTORIES(/usr/local/include/mysql)
	LINK_DIRECTORIES(/usr/local/mysql/lib)
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Linux")
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "CYGWIN")
	INCLUDE_DIRECTORIES(/usr/include)
	LINK_DIRECTORIES(/usr/lib)
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Windows")
	INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include/windows/mysql)
	LINK_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/lib/windows)
ELSE()
ENDIF()

IF(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
	SET(LIBRARIES "mysqlclient")
ELSEIF(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
	IF(PROJECT_BUILD_TYPE MATCHES "Debug")
		SET(LIBRARIES "ws2_32;libmysql")
	ELSEIF(PROJECT_BUILD_TYPE MATCHES "Release")
		SET(LIBRARIES "ws2_32;mysqlclient")
	ENDIF()
ENDIF()

#4.add definitions

#5.group header and sourse
SET(FILES_MYSQL_OPERATOR mysql_operator.cpp mysql_operator.h)
SET(FILES_MYSQL_TEST "mysql_test.cpp")
SET(FILES_MYSQL_TEST2 "mysql_test2.cpp")
SET(FILES_TEST_LOCK "test_lock.cpp")

#6.add sub dir if necessary

#7.add executable or library
ADD_LIBRARY(${TARGET_MYSQL_OPERATOR} ${FILES_MYSQL_OPERATOR})
ADD_EXECUTABLE(${TARGET_MYSQL_TEST} ${FILES_MYSQL_TEST})
ADD_EXECUTABLE(${TARGET_MYSQL_TEST2} ${FILES_MYSQL_TEST2})
ADD_EXECUTABLE(${TARGET_TEST_LOCK} ${FILES_TEST_LOCK})

#8.target link libraries if necessary
TARGET_LINK_LIBRARIES(${TARGET_MYSQL_TEST} ${LIBRARIES})
TARGET_LINK_LIBRARIES(${TARGET_MYSQL_TEST2} ${LIBRARIES} ${TARGET_MYSQL_OPERATOR})
TARGET_LINK_LIBRARIES(${TARGET_TEST_LOCK} ${LIBRARIES} ${TARGET_MYSQL_OPERATOR})

#9.set output path
SET_TARGET_PROPERTIES(${TARGET_MYSQL_TEST} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_PATH}/bin")
SET_TARGET_PROPERTIES(${TARGET_MYSQL_TEST2} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_PATH}/bin")
SET_TARGET_PROPERTIES(${TARGET_TEST_LOCK} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_PATH}/bin")
SET_TARGET_PROPERTIES(${TARGET_MYSQL_TEST} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_PATH}/bin")
SET_TARGET_PROPERTIES(${TARGET_MYSQL_TEST2} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_PATH}/bin")
SET_TARGET_PROPERTIES(${TARGET_TEST_LOCK} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_PATH}/bin")
